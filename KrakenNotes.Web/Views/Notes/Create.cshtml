@model KrakenNotes.Web.Models.NoteCreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Note</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" id="title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger" id="description"></span>
            </div>
            <div class="form-group">
                @*<input type="submit" value="Create" class="btn btn-success" />*@
                <a class="btn btn-success text-white" onclick="createNote()">
                    Create
                </a>
            </div>
        </form>
    </div>
    <div class="col-md">
        <partial name="_ViewTextEditor.cshtml" model="@Model">
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    const title = document.getElementById('title').nodeValue;
    const description = document.getElementById('description').nodeValue;
    const content = document.getElementById('editor').contentWindow.document.body.innerHTML;

    function createNote() {
        fetch('/Notes/Create', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ Title: title, Description: description, Content: content })
        })
    }
</script>